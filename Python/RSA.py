import gmpy2
from Crypto.Util.number import *

# RSA parameters
n = 129699330328568350681562198986490514508637584957167129897472522138320202321246467459276731970410463464391857177528123417751603910462751346700627325019668100946205876629688057506460903842119543114630198205843883677412125928979399310306206497958051030594098963939139480261500434508726394139839879752553022623977
e = 65537
c = 1120622417134137300168974785104238034450420931780798655287602928696711082459375593859502780410740631006406395528121046089302616654927338902036690741343481156428960702175150047965036760090706892068701615937701263822049336632521206562583215313132620054859244492905906529464104732824048555644739760193958510375

n1 = 129699330328568350681562198986490514508637584957167129897472522138320202321246467459276731970410463464391857177528123417751603910462751346700627325019668067056973833292274532016607871906443481233958300928276492550916101187841666991944275728863657788124666879987399045804435273107746626297122522298113586003834
n2 = 129699330328568350681562198986490514508637584957167129897472522138320202321246467459276731970410463464391857177528123417751603910462751346700627325019668066482326285878341068180156082719320570801770055174426452966817548862938770659420487687194933539128855877517847711670959794869291907075654200433400668220458
p4q = (n - n1 + n - n2 + 4) // 3
phi = n - p4q + 1

# d = inverse(e, phi)
d = gmpy2.invert(e,phi)

flag=long_to_bytes((pow(c,d,n)))
print("Decrypted message:", flag)

# 精髓就在这个p4q了
